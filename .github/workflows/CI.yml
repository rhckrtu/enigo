name: CI

permissions:
  contents: read
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - nightly
          - "1.64.0"
        platform:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/install_deps
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Setup headless display for integration tests on Linux
        if: runner.os == 'Linux' # This step is only needed on Linux. The other OSs don't need to be set up
        uses: ./.github/actions/headless_display

      - name: Start Firefox
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            start firefox tests/index.html
          else
            firefox tests/index.html &
          fi
        
      - name: Check the code format
        run: cargo fmt -- --check

      - name: Check clippy lints
        run: cargo clippy --all-targets --all-features -- -D clippy::pedantic
      - name: Check clippy lints for the examples
        run: cargo clippy --all-targets --all-features --examples -- -D clippy::pedantic

      - name: Build the code
        run: cargo build
      - name: Build the code with all features enabled
        run: cargo build --all-features

      - name: Build the docs
        run: cargo doc
      - name: Build the docs with all features enabled
        run: cargo doc --all-features

      - name: Build the examples
        run: cargo build --examples
      - name: Build the examples with all features enabled
        run: cargo build --examples --all-features

      - uses: OrbitalOwen/desktop-screenshot-action@0.1
        if: runner.os != 'Linux'
        with:
          file-name: '${{ matrix.platform }}_${{ matrix.rust }}_desktop_before.jpg'
        
      - name: Run integration tests
        run: cargo test integration --all-features -- --test-threads=1 --include-ignored --nocapture
     
      - uses: OrbitalOwen/desktop-screenshot-action@0.1
        if: runner.os != 'Linux'
        with:
          file-name: '${{ matrix.platform }}_${{ matrix.rust }}_desktop_during.jpg'

      - name: Do something after the integration tests
        if: always() && runner.os == 'Windows'
        run: cargo run --example fix_integration2

      - uses: OrbitalOwen/desktop-screenshot-action@0.1
        if: runner.os != 'Linux'
        with:
          file-name: '${{ matrix.platform }}_${{ matrix.rust }}_desktop_after.jpg'

